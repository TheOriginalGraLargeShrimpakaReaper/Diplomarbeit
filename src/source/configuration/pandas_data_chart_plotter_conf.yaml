diagram_inventory:
  #- "tps_mixed"
  - "db_inventory_per_os_databases"
  - "db_inventory_per_os_instances"
  - "db_inventory_per_os_appliance"
  - "db_inventory_per_rdbms_instance"
  - "db_inventory_per_rdbms_database"
  - "db_inventory_per_rdbms"
  - "db_inventory_per_os"
#  - "projektcontrolling"
  - "time_investment"
  - "cost_investment"
  - "benchmarking_tps_evaluation_mixed"
  - "benchmarking_tps_evaluation_dql"
  - "benchmarking_latency_evaluation_mixed"
  - "benchmarking_latency_evaluation_dql"
  - "benchmarking_used_table_space"
  - "benchmarking_row_counts"
#  - "benchmarking_pgbench_evaluation_errors_abs"
#  - "benchmarking_pgbench_evaluation_errors_per"
  - "benchmarking_initializing_time_sec"
  - "benchmarking_initializing_time_min"
  - "benchmarking_initializing_time_hour"
  - "benchmarking_patroni_tps_evaluation_mixed"
  - "benchmarking_patroni_tps_evaluation_dql"
  - "benchmarking_patroni_latency_evaluation_mixed"
  - "benchmarking_patroni_latency_evaluation_dql"
  - "time_investment_sum"
  - "cost_investment_sum"
  - "time_investment_action"
  - "cost_investment_action"
  - "projektcontrolling_balance"
  - "projektcontrolling_dauer"
  - "projektcontrolling_geplant"
panda_diagram_plotter:
  tps_mixed:
    id: "tps_mixed"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "tps_mixed.png"
    datafile_path: "source/pandas_data_chart_plotter"
    datafile: "tps_evaluation.csv"
    separator: ","
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "2. Iteration"
      - "3. Iteration"
      - "4. Iteration"
    x-axis-title: "Varianten"
    y-axis-title: "Transaktionen pro Sekunde (tps)"
    title: "Transaktionen pro Sekunden - mixed Bsp."
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "tps_1_iteration"
      - "tps_typ"
    column_operations:
      datas:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      tps_2_iteration: "2. Iteration"
      tps_3_iteration: "3. Iteration"
      tps_4_iteration: "4. Iteration"
    where_clausel: "tps_typ == 'mixed'"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  db_inventory_per_rdbms:
    id: "db_inventory_per_rdbms"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "db_inventory_per_rdbms.png"
    datafile_path: "source/tables"
    datafile: "inventory.csv"
    separator: ","
    decimal: "."
    x-axis-columns: "RDBMS"
    y-axis-columns:
    x-axis-title:
    y-axis-title:
    title: "Datenbankinventor - Pro RDBMS"
    chart-index: "RDBMS"
    chart-kind: "pie"
    chart-designs:
      subplots: True
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: True
      subplot: !!python/tuple [1,2]
      secondary_y: False
      stylelist:
      figsize: !!python/tuple [10,15]
      autopct: '%1.0f%%'
      loc: "best"
      bbox_to_anchor:
    group_by:
      - "rdbms"
    group_by_function: "sum"
    agg_funtion:
    agg_colums:
      - "rdbms"
    drop_columns:
     - "server"
     - "os"
     - "version"
     - "releasedate"
     - "eol"
     - "age"
     - "eol_since"
     - "comment"
     - "appliance"
    column_operations:
      datas:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
     rdbms: "RDBMS"
     instance : "Instanz"
     databases : "Datenbanken"
     appliance: "Appliance"
    where_clausel:
    sorting:
      order_by:
        - "rdbms"
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  db_inventory_per_os:
    id: "db_inventory_per_os"
    separator: ","
    decimal: "."
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    datafile_path: "source/tables"
    datafile: "inventory.csv"
    imagename: "db_inventory_per_os.png"
    decimal_format:
    x-axis-columns: "RDBMS"
    y-axis-columns:
    x-axis-title:
    y-axis-title:
    title: "Datenbankinventor - Pro OS"
    chart-index:
    chart-kind: "pie"
    chart-designs:
      subplots: True
      subplot: !!python/tuple [1,3]
      grid: False
      legend: False
      rot:
      fontsize:
      stacked: True
      secondary_y: False
      stylelist:
      figsize: !!python/tuple [25,10]
      autopct: '%1.0f%%'
      loc: "upper center"
      bbox_to_anchor: !!python/tuple [0,0]
    group_by:
     - "rdbms"
     - "os"
    group_by_function: "sum"
    agg_funtion:
    agg_colums:
     - "os"
    drop_columns:
     - "server"
     - "version"
     - "releasedate"
     - "eol"
     - "age"
     - "eol_since"
     - "comment"
  #   - "appliance"
    column_operations:
     datas:
     operations:
      dauer_summe:
       operation_function:
       axis_number:
       columns:
    pivot:
     pivot_columns:
     pivot_values:
    pivot_table:
     pivot_index:
      pivot_indizes:
       - "os"
       - "rdbms"
      pivot_indizes_visible: True
      pivot_rename_indizes:
       os: "OS"
       rdbms: "RDBMS"
     pivot_columns:
     pivot_values:
     pivot_agg_func:
      instance: "sum"
      databases: "sum"
      appliance: "sum"
     transpose: True
    rename_columns:
     rdbms: "RDBMS"
     instance : "Instanz"
     databases : "Datenbanken"
     os : "OS"
     appliance: "Appliance"
    where_clausel:
    sorting:
     order_by:
     sort_acending: False
     sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  projektcontrolling:
    id: "projektcontrolling"
    separator: ";"
    decimal: "."
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    datafile_path: "source/tables"
    datafile: "arbeitsrapport.CSV"
    imagename: "projektcontrolling.png"
    decimal_format:
    x-axis-columns: "Subphase"
    y-axis-columns:
    x-axis-title:
    y-axis-title:
    title: "Projektcontrolling"
    chart-index: "Subphase"
    chart-kind: "pie"
    chart-designs:
      subplots: True
      grid: False
      legend: False
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize: !!python/tuple [25,10]
      autopct: '%1.0f%%'
      loc: "upper center"
      bbox_to_anchor: !!python/tuple [0,0]
    group_by:
     - "Subphase"
    group_by_function: "sum"
    agg_funtion:
     - "Dauer [h]"
     - "Geplante Dauer [h]"
    agg_colums:
    drop_columns:
     - "dauer_summe"
     - "Datum"
     - "Von"
     - "Bis"
     - "Hide"
     - "Phase"
     - "Tätigkeit"
     - "Bemerkung"
     - "Schwierigkeit"
     - "Lösungen"
    column_operations:
     datas:
     operations:
      dauer_summe:
       operation_function:
       axis_number: 1
       columns:
    pivot:
     pivot_columns:
     pivot_values:
    pivot_table:
     pivot_index:
      pivot_indizes:
      pivot_indizes_visible: False
      pivot_rename_indizes:
     pivot_columns:
     pivot_values:
     pivot_agg_func:
     transpose: True
    rename_columns:
    where_clausel:
    sorting:
     order_by:
     sort_acending: False
     sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  time_investment:
    id: "time_investment"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "time_investment.png"
    datafile_path: "source/pandas_data_chart_plotter"
    datafile: "time_investment.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "Basisinstallation"
      - "Basiskonfiguration"
      - "Backup Konfiguration"
      - "Monitoring Konfiguration"
      - "Backup Konfiguration"
      - "PKI Integration"
      - "Automatisierung Backup"
      - "Automatisierung Skalierung"
      - "Self-Healing"
      - "Auto-Recovery"
      - "DB Self-Service"
      - "Switchover / 5 Jahre"
      - "Node Recovery / 5 Jahre"
      - "Backup Recovery / 5 Jahre"
      - "Quorum erweitern / 5 Jahre"
    x-axis-title: "Varianten"
    y-axis-title: "Aufwand [h]"
    title: "Gemessene und Extrapolierte Aufwände"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor: !!python/tuple [1,1]
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "Filter"
      - "Switchover / Pro Aktion"
      - "Node Recovery / Pro Aktion"
      - "Backup Recovery / Pro Aktion"
      - "Quorum erweitern / Pro Aktion"
    column_operations:
      datas:
#        - "Gesamtaufwand"
      operations:
        Gesamtaufwand:
          operation_function: "sum"
          axis_number: 1
          columns:
            - "Basisinstallation"
            - "Basiskonfiguration"
            - "Backup Konfiguration"
            - "Monitoring Konfiguration"
            - "Backup Konfiguration"
            - "PKI Integration"
            - "Automatisierung Backup"
            - "Automatisierung Skalierung"
            - "Self-Healing"
            - "Auto-Recovery"
            - "DB Self-Service"
            - "Switchover / 5 Jahre"
            - "Node Recovery / 5 Jahre"
            - "Backup Recovery / 5 Jahre"
            - "Quorum erweitern / 5 Jahre"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      Gesamtaufwand: "Gesamtaufwand / 5 Jahre"
    where_clausel: "Filter == 1"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  cost_investment:
    id: "cost_investment"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "cost_investment.png"
#    datafile_path: "source/tables"
    datafile_path: "source/pandas_data_chart_plotter"
#    datafile: "measurement_times.csv"
    datafile: "cost_investemnt.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "Basisinstallation"
      - "Basiskonfiguration"
      - "Backup Konfiguration"
      - "Monitoring Konfiguration"
      - "Backup Konfiguration"
      - "PKI Integration"
      - "Automatisierung Backup"
      - "Automatisierung Skalierung"
      - "Self-Healing"
      - "Auto-Recovery"
      - "DB Self-Service"
      - "Switchover / 5 Jahre"
      - "Node Recovery / 5 Jahre"
      - "Backup Recovery / 5 Jahre"
      - "Quorum erweitern / 5 Jahre"
    x-axis-title: "Varianten"
    y-axis-title: "Kosten [CHF]"
    title: "Berechnete und Extrapolierte Aufwände"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor: !!python/tuple [1,1]
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "Filter"
      - "Switchover / Pro Aktion"
      - "Node Recovery / Pro Aktion"
      - "Backup Recovery / Pro Aktion"
      - "Quorum erweitern / Pro Aktion"
    column_operations:
      datas:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
    where_clausel: "Filter == 1"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  benchmarking_tps_evaluation_mixed:
    id: "benchmarking_tps_evaluation_mixed"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "tps_mixed.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_tps.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "1. Iteration \u2300"
      - "1. Iteration min"
      - "1. Iteration max"
      - "2. Iteration \u2300"
      - "2. Iteration min"
      - "2. Iteration max"
      - "3. Iteration \u2300"
      - "3. Iteration min"
      - "3. Iteration max"
      - "4. Iteration \u2300"
      - "4. Iteration min"
      - "4. Iteration max"
    x-axis-title: "Varianten"
    y-axis-title: "Transaktionen pro Sekunde (tps)"
    title: "Transaktionen pro Sekunden - mixed"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "tps_type"
      - "tps_1_run_1_iteration"
      - "tps_1_run_2_iteration"
      - "tps_1_run_3_iteration"
      - "tps_1_run_4_iteration"
      - "tps_2_run_1_iteration"
      - "tps_2_run_2_iteration"
      - "tps_2_run_3_iteration"
      - "tps_2_run_4_iteration"
      - "tps_3_run_1_iteration"
      - "tps_3_run_2_iteration"
      - "tps_3_run_3_iteration"
      - "tps_3_run_4_iteration"
      - "tps_4_run_1_iteration"
      - "tps_4_run_2_iteration"
      - "tps_4_run_3_iteration"
      - "tps_4_run_4_iteration"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "tps_1_run_average"
        - "tps_1_run_min"
        - "tps_1_run_max"
        - "tps_2_run_average"
        - "tps_2_run_min"
        - "tps_2_run_max"
        - "tps_3_run_average"
        - "tps_3_run_min"
        - "tps_3_run_max"
        - "tps_4_run_average"
        - "tps_4_run_min"
        - "tps_4_run_max"
      operations:
        tps_1_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_1_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_1_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_2_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
        tps_2_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
        tps_2_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
        tps_3_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_3_run_2_iteration"
            - "tps_3_run_3_iteration"
            - "tps_3_run_4_iteration"
        tps_3_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_3_run_2_iteration"
            - "tps_3_run_3_iteration"
            - "tps_3_run_4_iteration"
        tps_3_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_3_run_2_iteration"
            - "tps_3_run_3_iteration"
            - "tps_3_run_4_iteration"
        tps_4_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_4_run_2_iteration"
            - "tps_4_run_3_iteration"
            - "tps_4_run_4_iteration"
        tps_4_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_4_run_2_iteration"
            - "tps_4_run_3_iteration"
            - "tps_4_run_4_iteration"
        tps_4_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_4_run_2_iteration"
            - "tps_4_run_3_iteration"
            - "tps_4_run_4_iteration"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      tps_1_run_average: "1. Iteration \u2300"
      tps_1_run_min: "1. Iteration min"
      tps_1_run_max: "1. Iteration max"
      tps_2_run_average: "2. Iteration \u2300"
      tps_2_run_min: "2. Iteration min"
      tps_2_run_max: "2. Iteration max"
      tps_3_run_average: "3. Iteration \u2300"
      tps_3_run_min: "3. Iteration min"
      tps_3_run_max: "3. Iteration max"
      tps_4_run_average: "4. Iteration \u2300"
      tps_4_run_min: "4. Iteration min"
      tps_4_run_max: "4. Iteration max"
    where_clausel: "tps_type == 'mixed'"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_tps_evaluation_dql:
    id: "benchmarking_tps_evaluation_dql"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "tps_dql.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_tps.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "1. Iteration \u2300"
      - "1. Iteration min"
      - "1. Iteration max"
      - "2. Iteration \u2300"
      - "2. Iteration min"
      - "2. Iteration max"
      - "3. Iteration \u2300"
      - "3. Iteration min"
      - "3. Iteration max"
      - "4. Iteration \u2300"
      - "4. Iteration min"
      - "4. Iteration max"
    x-axis-title: "Varianten"
    y-axis-title: "Transaktionen pro Sekunde (tps)"
    title: "Transaktionen pro Sekunden - dql"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc: "lower center"

#      bbox_to_anchor: !!python/tuple [1,1]
#      bbox_to_anchor: !!python/tuple [8]
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "tps_type"
      - "tps_1_run_1_iteration"
      - "tps_1_run_2_iteration"
      - "tps_1_run_3_iteration"
      - "tps_1_run_4_iteration"
      - "tps_2_run_1_iteration"
      - "tps_2_run_2_iteration"
      - "tps_2_run_3_iteration"
      - "tps_2_run_4_iteration"
      - "tps_3_run_1_iteration"
      - "tps_3_run_2_iteration"
      - "tps_3_run_3_iteration"
      - "tps_3_run_4_iteration"
      - "tps_4_run_1_iteration"
      - "tps_4_run_2_iteration"
      - "tps_4_run_3_iteration"
      - "tps_4_run_4_iteration"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "tps_1_run_average"
        - "tps_1_run_min"
        - "tps_1_run_max"
        - "tps_2_run_average"
        - "tps_2_run_min"
        - "tps_2_run_max"
        - "tps_3_run_average"
        - "tps_3_run_min"
        - "tps_3_run_max"
        - "tps_4_run_average"
        - "tps_4_run_min"
        - "tps_4_run_max"
      operations:
        tps_1_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_1_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_1_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_2_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
        tps_2_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
        tps_2_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
        tps_3_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_3_run_2_iteration"
            - "tps_3_run_3_iteration"
            - "tps_3_run_4_iteration"
        tps_3_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_3_run_2_iteration"
            - "tps_3_run_3_iteration"
            - "tps_3_run_4_iteration"
        tps_3_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_3_run_2_iteration"
            - "tps_3_run_3_iteration"
            - "tps_3_run_4_iteration"
        tps_4_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_4_run_2_iteration"
            - "tps_4_run_3_iteration"
            - "tps_4_run_4_iteration"
        tps_4_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_4_run_2_iteration"
            - "tps_4_run_3_iteration"
            - "tps_4_run_4_iteration"
        tps_4_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_4_run_2_iteration"
            - "tps_4_run_3_iteration"
            - "tps_4_run_4_iteration"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      tps_1_run_average: "1. Iteration \u2300"
      tps_1_run_min: "1. Iteration min"
      tps_1_run_max: "1. Iteration max"
      tps_2_run_average: "2. Iteration \u2300"
      tps_2_run_min: "2. Iteration min"
      tps_2_run_max: "2. Iteration max"
      tps_3_run_average: "3. Iteration \u2300"
      tps_3_run_min: "3. Iteration min"
      tps_3_run_max: "3. Iteration max"
      tps_4_run_average: "4. Iteration \u2300"
      tps_4_run_min: "4. Iteration min"
      tps_4_run_max: "4. Iteration max"
    where_clausel: "tps_type == 'dql'"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_latency_evaluation_mixed:
    id: "benchmarking_latency_evaluation_mixed"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "latency_mixed.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_latency.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "1. Iteration \u2300"
      - "1. Iteration min"
      - "1. Iteration max"
      - "2. Iteration \u2300"
      - "2. Iteration min"
      - "2. Iteration max"
      - "3. Iteration \u2300"
      - "3. Iteration min"
      - "3. Iteration max"
      - "4. Iteration \u2300"
      - "4. Iteration min"
      - "4. Iteration max"
    x-axis-title: "Varianten"
    y-axis-title: "Latenzen (ms)"
    title: "Latenzen in milisekunden - mixed"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "latency_type"
      - "latency_1_run_1_iteration"
      - "latency_1_run_2_iteration"
      - "latency_1_run_3_iteration"
      - "latency_1_run_4_iteration"
      - "latency_2_run_1_iteration"
      - "latency_2_run_2_iteration"
      - "latency_2_run_3_iteration"
      - "latency_2_run_4_iteration"
      - "latency_3_run_1_iteration"
      - "latency_3_run_2_iteration"
      - "latency_3_run_3_iteration"
      - "latency_3_run_4_iteration"
      - "latency_4_run_1_iteration"
      - "latency_4_run_2_iteration"
      - "latency_4_run_3_iteration"
      - "latency_4_run_4_iteration"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "latency_1_run_average"
        - "latency_1_run_min"
        - "latency_1_run_max"
        - "latency_2_run_average"
        - "latency_2_run_min"
        - "latency_2_run_max"
        - "latency_3_run_average"
        - "latency_3_run_min"
        - "latency_3_run_max"
        - "latency_4_run_average"
        - "latency_4_run_min"
        - "latency_4_run_max"
      operations:
        latency_1_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_1_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_1_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_2_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
        latency_2_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
        latency_2_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
        latency_3_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_3_run_2_iteration"
            - "latency_3_run_3_iteration"
            - "latency_3_run_4_iteration"
        latency_3_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_3_run_2_iteration"
            - "latency_3_run_3_iteration"
            - "latency_3_run_4_iteration"
        latency_3_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_3_run_2_iteration"
            - "latency_3_run_3_iteration"
            - "latency_3_run_4_iteration"
        latency_4_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_4_run_2_iteration"
            - "latency_4_run_3_iteration"
            - "latency_4_run_4_iteration"
        latency_4_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_4_run_2_iteration"
            - "latency_4_run_3_iteration"
            - "latency_4_run_4_iteration"
        latency_4_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_4_run_2_iteration"
            - "latency_4_run_3_iteration"
            - "latency_4_run_4_iteration"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      latency_1_run_average: "1. Iteration \u2300"
      latency_1_run_min: "1. Iteration min"
      latency_1_run_max: "1. Iteration max"
      latency_2_run_average: "2. Iteration \u2300"
      latency_2_run_min: "2. Iteration min"
      latency_2_run_max: "2. Iteration max"
      latency_3_run_average: "3. Iteration \u2300"
      latency_3_run_min: "3. Iteration min"
      latency_3_run_max: "3. Iteration max"
      latency_4_run_average: "4. Iteration \u2300"
      latency_4_run_min: "4. Iteration min"
      latency_4_run_max: "4. Iteration max"
    where_clausel: "latency_type == 'mixed'"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_latency_evaluation_dql:
    id: "benchmarking_latency_evaluation_dql"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "latency_dql.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_latency.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "1. Iteration \u2300"
      - "1. Iteration min"
      - "1. Iteration max"
      - "2. Iteration \u2300"
      - "2. Iteration min"
      - "2. Iteration max"
      - "3. Iteration \u2300"
      - "3. Iteration min"
      - "3. Iteration max"
      - "4. Iteration \u2300"
      - "4. Iteration min"
      - "4. Iteration max"
    x-axis-title: "Varianten"
    y-axis-title: "Latenzen (ms)"
    title: "Latenzen in milisekunden - mixed"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "latency_type"
      - "latency_1_run_1_iteration"
      - "latency_1_run_2_iteration"
      - "latency_1_run_3_iteration"
      - "latency_1_run_4_iteration"
      - "latency_2_run_1_iteration"
      - "latency_2_run_2_iteration"
      - "latency_2_run_3_iteration"
      - "latency_2_run_4_iteration"
      - "latency_3_run_1_iteration"
      - "latency_3_run_2_iteration"
      - "latency_3_run_3_iteration"
      - "latency_3_run_4_iteration"
      - "latency_4_run_1_iteration"
      - "latency_4_run_2_iteration"
      - "latency_4_run_3_iteration"
      - "latency_4_run_4_iteration"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "latency_1_run_average"
        - "latency_1_run_min"
        - "latency_1_run_max"
        - "latency_2_run_average"
        - "latency_2_run_min"
        - "latency_2_run_max"
        - "latency_3_run_average"
        - "latency_3_run_min"
        - "latency_3_run_max"
        - "latency_4_run_average"
        - "latency_4_run_min"
        - "latency_4_run_max"
      operations:
        latency_1_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_1_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_1_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_2_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
        latency_2_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
        latency_2_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
        latency_3_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_3_run_2_iteration"
            - "latency_3_run_3_iteration"
            - "latency_3_run_4_iteration"
        latency_3_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_3_run_2_iteration"
            - "latency_3_run_3_iteration"
            - "latency_3_run_4_iteration"
        latency_3_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_3_run_2_iteration"
            - "latency_3_run_3_iteration"
            - "latency_3_run_4_iteration"
        latency_4_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_4_run_2_iteration"
            - "latency_4_run_3_iteration"
            - "latency_4_run_4_iteration"
        latency_4_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_4_run_2_iteration"
            - "latency_4_run_3_iteration"
            - "latency_4_run_4_iteration"
        latency_4_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_4_run_2_iteration"
            - "latency_4_run_3_iteration"
            - "latency_4_run_4_iteration"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      latency_1_run_average: "1. Iteration \u2300"
      latency_1_run_min: "1. Iteration min"
      latency_1_run_max: "1. Iteration max"
      latency_2_run_average: "2. Iteration \u2300"
      latency_2_run_min: "2. Iteration min"
      latency_2_run_max: "2. Iteration max"
      latency_3_run_average: "3. Iteration \u2300"
      latency_3_run_min: "3. Iteration min"
      latency_3_run_max: "3. Iteration max"
      latency_4_run_average: "4. Iteration \u2300"
      latency_4_run_min: "4. Iteration min"
      latency_4_run_max: "4. Iteration max"
    where_clausel: "latency_type == 'mixed'"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_used_table_space:
    id: "benchmarking_used_table_space"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "used_table_space.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_table_used_space.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "scale 400"
      - "scale 1200"
      - "scale 3999"
      - "scale 16784"
    x-axis-title: "Varianten"
    y-axis-title: "Tabellengrösse [MiB]"
    title: "Tabellengrössen"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "Anzahl Zeilen - scale 400"
      - "Anzahl Zeilen - scale 1200"
      - "Anzahl Zeilen - scale 3999"
      - "Anzahl Zeilen - scale 16784"
    drop_columns_after_operations: False
    column_operations:
      datas:
      operations:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      table-size [MiB] - scale 400: "scale 400"
      table-size [MiB] - scale 1200: "scale 1200"
      table-size [MiB] - scale 3999: "scale 3999"
      table-size [MiB] - scale 16784: "scale 16784"
    where_clausel:
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_row_counts:
    id: "benchmarking_row_counts"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "row_counts.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_table_used_space.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "scale 400"
      - "scale 1200"
      - "scale 3999"
      - "scale 16784"
    x-axis-title: "Varianten"
    y-axis-title: "Anzahl Records"
    title: "Anzahl Records pro skalierungsfaktor"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "table-size [MiB] - scale 400"
      - "table-size [MiB] - scale 1200"
      - "table-size [MiB] - scale 3999"
      - "table-size [MiB] - scale 16784"
    drop_columns_after_operations: False
    column_operations:
      datas:
      operations:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      Anzahl Zeilen - scale 400: "scale 400"
      Anzahl Zeilen - scale 1200: "scale 1200"
      Anzahl Zeilen - scale 3999: "scale 3999"
      Anzahl Zeilen - scale 16784: "scale 16784"
    where_clausel:
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_pgbench_evaluation_errors_abs:
    id: "benchmarking_pgbench_evaluation_errors"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "pgbench_errors_absolute.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_pgbench_errors.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "1. Iteration \u2300"
      - "1. Iteration min"
      - "1. Iteration max"
      - "2. Iteration \u2300"
      - "2. Iteration min"
      - "2. Iteration max"
      - "3. Iteration \u2300"
      - "3. Iteration min"
      - "3. Iteration max"
      - "4. Iteration \u2300"
      - "4. Iteration min"
      - "4. Iteration max"
    x-axis-title: "Varianten"
    y-axis-title: "Fehler"
    title: "Fehler mixed Transaktionen"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "errors_1_run_1_iteration_abs"
      - "errors_1_run_2_iteration_abs"
      - "errors_1_run_3_iteration_abs"
      - "errors_1_run_4_iteration_abs"
      - "errors_1_run_1_iteration_per"
      - "errors_1_run_2_iteration_per"
      - "errors_1_run_3_iteration_per"
      - "errors_1_run_4_iteration_per"
      - "errors_2_run_1_iteration_abs"
      - "errors_2_run_2_iteration_abs"
      - "errors_2_run_3_iteration_abs"
      - "errors_2_run_4_iteration_abs"
      - "errors_2_run_1_iteration_per"
      - "errors_2_run_2_iteration_per"
      - "errors_2_run_3_iteration_per"
      - "errors_2_run_4_iteration_per"
      - "errors_3_run_1_iteration_abs"
      - "errors_3_run_2_iteration_abs"
      - "errors_3_run_3_iteration_abs"
      - "errors_3_run_4_iteration_abs"
      - "errors_3_run_1_iteration_per"
      - "errors_3_run_2_iteration_per"
      - "errors_3_run_3_iteration_per"
      - "errors_3_run_4_iteration_per"
      - "errors_4_run_1_iteration_abs"
      - "errors_4_run_2_iteration_abs"
      - "errors_4_run_3_iteration_abs"
      - "errors_4_run_4_iteration_abs"
      - "errors_4_run_1_iteration_per"
      - "errors_4_run_2_iteration_per"
      - "errors_4_run_3_iteration_per"
      - "errors_4_run_4_iteration_per"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "errors_1_run_average_abs"
        - "errors_1_run_min_abs"
        - "errors_1_run_max_abs"
        - "errors_2_run_average_abs"
        - "errors_2_run_min_abs"
        - "errors_2_run_max_abs"
        - "errors_3_run_average_abs"
        - "errors_3_run_min_abs"
        - "errors_3_run_max_abs"
        - "errors_4_run_average_abs"
        - "errors_4_run_min_abs"
        - "errors_4_run_max_abs"
      operations:
        errors_1_run_average_abs:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "errors_1_run_2_iteration_abs"
            - "errors_1_run_3_iteration_abs"
            - "errors_1_run_4_iteration_abs"
        errors_1_run_min_abs:
          operation_function: "min"
          axis_number: 1
          columns:
            - "errors_1_run_2_iteration_abs"
            - "errors_1_run_3_iteration_abs"
            - "errors_1_run_4_iteration_abs"
        errors_1_run_max_abs:
          operation_function: "max"
          axis_number: 1
          columns:
            - "errors_1_run_2_iteration_abs"
            - "errors_1_run_3_iteration_abs"
            - "errors_1_run_4_iteration_abs"
        errors_2_run_average_abs:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "errors_2_run_2_iteration_abs"
            - "errors_2_run_3_iteration_abs"
            - "errors_2_run_4_iteration_abs"
        errors_2_run_min_abs:
          operation_function: "min"
          axis_number: 1
          columns:
            - "errors_2_run_2_iteration_abs"
            - "errors_2_run_3_iteration_abs"
            - "errors_2_run_4_iteration_abs"
        errors_2_run_max_abs:
          operation_function: "max"
          axis_number: 1
          columns:
            - "errors_2_run_2_iteration_abs"
            - "errors_2_run_3_iteration_abs"
            - "errors_2_run_4_iteration_abs"
        errors_3_run_average_abs:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "errors_3_run_2_iteration_abs"
            - "errors_3_run_3_iteration_abs"
            - "errors_3_run_4_iteration_abs"
        errors_3_run_min_abs:
          operation_function: "min"
          axis_number: 1
          columns:
            - "errors_3_run_2_iteration_abs"
            - "errors_3_run_3_iteration_abs"
            - "errors_3_run_4_iteration_abs"
        errors_3_run_max_abs:
          operation_function: "max"
          axis_number: 1
          columns:
            - "errors_3_run_2_iteration_abs"
            - "errors_3_run_3_iteration_abs"
            - "errors_3_run_4_iteration_abs"
        errors_4_run_average_abs:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "errors_4_run_2_iteration_abs"
            - "errors_4_run_3_iteration_abs"
            - "errors_4_run_4_iteration_abs"
        errors_4_run_min_abs:
          operation_function: "min"
          axis_number: 1
          columns:
            - "errors_4_run_2_iteration_abs"
            - "errors_4_run_3_iteration_abs"
            - "errors_4_run_4_iteration_abs"
        errors_4_run_max_abs:
          operation_function: "max"
          axis_number: 1
          columns:
            - "errors_4_run_2_iteration_abs"
            - "errors_4_run_3_iteration_abs"
            - "errors_4_run_4_iteration_abs"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      errors_1_run_average_abs: "1. Iteration \u2300"
      errors_1_run_min_abs: "1. Iteration min"
      errors_1_run_max_abs: "1. Iteration max"
      errors_2_run_average_abs: "2. Iteration \u2300"
      errors_2_run_min_abs: "2. Iteration min"
      errors_2_run_max_abs: "2. Iteration max"
      errors_3_run_average_abs: "3. Iteration \u2300"
      errors_3_run_min_abs: "3. Iteration min"
      errors_3_run_max_abs: "3. Iteration max"
      errors_4_run_average_abs: "4. Iteration \u2300"
      errors_4_run_min_abs: "4. Iteration min"
      errors_4_run_max_abs: "4. Iteration max"
    where_clausel:
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_pgbench_evaluation_errors_per:
    id: "benchmarking_pgbench_evaluation_errors_per"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "pgbench_errors_percentage.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_pgbench_errors.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "1. Iteration \u2300"
      - "1. Iteration min"
      - "1. Iteration max"
      - "2. Iteration \u2300"
      - "2. Iteration min"
      - "2. Iteration max"
      - "3. Iteration \u2300"
      - "3. Iteration min"
      - "3. Iteration max"
      - "4. Iteration \u2300"
      - "4. Iteration min"
      - "4. Iteration max"
    x-axis-title: "Varianten"
    y-axis-title: "Fehlerrate [%]"
    title: "Fehlerrate mixed Transaktionen"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "errors_1_run_1_iteration_abs"
      - "errors_1_run_2_iteration_abs"
      - "errors_1_run_3_iteration_abs"
      - "errors_1_run_4_iteration_abs"
      - "errors_1_run_1_iteration_per"
      - "errors_1_run_2_iteration_per"
      - "errors_1_run_3_iteration_per"
      - "errors_1_run_4_iteration_per"
      - "errors_2_run_1_iteration_abs"
      - "errors_2_run_2_iteration_abs"
      - "errors_2_run_3_iteration_abs"
      - "errors_2_run_4_iteration_abs"
      - "errors_2_run_1_iteration_per"
      - "errors_2_run_2_iteration_per"
      - "errors_2_run_3_iteration_per"
      - "errors_2_run_4_iteration_per"
      - "errors_3_run_1_iteration_abs"
      - "errors_3_run_2_iteration_abs"
      - "errors_3_run_3_iteration_abs"
      - "errors_3_run_4_iteration_abs"
      - "errors_3_run_1_iteration_per"
      - "errors_3_run_2_iteration_per"
      - "errors_3_run_3_iteration_per"
      - "errors_3_run_4_iteration_per"
      - "errors_4_run_1_iteration_abs"
      - "errors_4_run_2_iteration_abs"
      - "errors_4_run_3_iteration_abs"
      - "errors_4_run_4_iteration_abs"
      - "errors_4_run_1_iteration_per"
      - "errors_4_run_2_iteration_per"
      - "errors_4_run_3_iteration_per"
      - "errors_4_run_4_iteration_per"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "errors_1_run_average_per"
        - "errors_1_run_min_per"
        - "errors_1_run_max_per"
        - "errors_2_run_average_per"
        - "errors_2_run_min_per"
        - "errors_2_run_max_per"
        - "errors_3_run_average_per"
        - "errors_3_run_min_per"
        - "errors_3_run_max_per"
        - "errors_4_run_average_per"
        - "errors_4_run_min_per"
        - "errors_4_run_max_per"
      operations:
        errors_1_run_average_per:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "errors_1_run_2_iteration_per"
            - "errors_1_run_3_iteration_per"
            - "errors_1_run_4_iteration_per"
        errors_1_run_min_per:
          operation_function: "min"
          axis_number: 1
          columns:
            - "errors_1_run_2_iteration_per"
            - "errors_1_run_3_iteration_per"
            - "errors_1_run_4_iteration_per"
        errors_1_run_max_per:
          operation_function: "max"
          axis_number: 1
          columns:
            - "errors_1_run_2_iteration_per"
            - "errors_1_run_3_iteration_per"
            - "errors_1_run_4_iteration_per"
        errors_2_run_average_per:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "errors_2_run_2_iteration_per"
            - "errors_2_run_3_iteration_per"
            - "errors_2_run_4_iteration_per"
        errors_2_run_min_per:
          operation_function: "min"
          axis_number: 1
          columns:
            - "errors_2_run_2_iteration_per"
            - "errors_2_run_3_iteration_per"
            - "errors_2_run_4_iteration_per"
        errors_2_run_max_per:
          operation_function: "max"
          axis_number: 1
          columns:
            - "errors_2_run_2_iteration_per"
            - "errors_2_run_3_iteration_per"
            - "errors_2_run_4_iteration_per"
        errors_3_run_average_per:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "errors_3_run_2_iteration_per"
            - "errors_3_run_3_iteration_per"
            - "errors_3_run_4_iteration_per"
        errors_3_run_min_per:
          operation_function: "min"
          axis_number: 1
          columns:
            - "errors_3_run_2_iteration_per"
            - "errors_3_run_3_iteration_per"
            - "errors_3_run_4_iteration_per"
        errors_3_run_max_per:
          operation_function: "max"
          axis_number: 1
          columns:
            - "errors_3_run_2_iteration_per"
            - "errors_3_run_3_iteration_per"
            - "errors_3_run_4_iteration_per"
        errors_4_run_average_per:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "errors_4_run_2_iteration_per"
            - "errors_4_run_3_iteration_per"
            - "errors_4_run_4_iteration_per"
        errors_4_run_min_per:
          operation_function: "min"
          axis_number: 1
          columns:
            - "errors_4_run_2_iteration_per"
            - "errors_4_run_3_iteration_per"
            - "errors_4_run_4_iteration_per"
        errors_4_run_max_per:
          operation_function: "max"
          axis_number: 1
          columns:
            - "errors_4_run_2_iteration_per"
            - "errors_4_run_3_iteration_per"
            - "errors_4_run_4_iteration_per"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      errors_1_run_average_per: "1. Iteration \u2300"
      errors_1_run_min_per: "1. Iteration min"
      errors_1_run_max_per: "1. Iteration max"
      errors_2_run_average_per: "2. Iteration \u2300"
      errors_2_run_min_per: "2. Iteration min"
      errors_2_run_max_per: "2. Iteration max"
      errors_3_run_average_per: "3. Iteration \u2300"
      errors_3_run_min_per: "3. Iteration min"
      errors_3_run_max_per: "3. Iteration max"
      errors_4_run_average_per: "4. Iteration \u2300"
      errors_4_run_min_per: "4. Iteration min"
      errors_4_run_max_per: "4. Iteration max"
    where_clausel:
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_initializing_time_sec:
    id: "benchmarking_initializing_time_sec"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "initializing_time_sec.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_initializing_time.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "scale 400"
      - "scale 1200"
      - "scale 3999"
      - "scale 16784"
    x-axis-title: "Varianten"
    y-axis-title: "Init-Zeit [sek.]"
    title: "Initialisierungszeiten"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "scale 400 - min"
      - "scale 400 - hour"
      - "scale 1200 - min"
      - "scale 1200 - hour"
      - "scale 3999 - min"
      - "scale 3999 - hour"
      - "scale 16784 - min"
      - "scale 16784 - hour"
    drop_columns_after_operations: False
    column_operations:
      datas:
      operations:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      scale 400 - sec: "scale 400"
      scale 1200 - sec: "scale 1200"
      scale 3999 - sec: "scale 3999"
      scale 16784 - sec: "scale 16784"
    where_clausel:
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_initializing_time_min:
    id: "benchmarking_initializing_time_min"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "initializing_time_min.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_initializing_time.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "scale 400"
      - "scale 1200"
      - "scale 3999"
      - "scale 16784"
    x-axis-title: "Varianten"
    y-axis-title: "Init-Zeit [min.]"
    title: "Initialisierungszeiten"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "scale 400 - sec"
      - "scale 400 - hour"
      - "scale 1200 - sec"
      - "scale 1200 - hour"
      - "scale 3999 - sec"
      - "scale 3999 - hour"
      - "scale 16784 - sec"
      - "scale 16784 - hour"
    drop_columns_after_operations: False
    column_operations:
      datas:
      operations:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      scale 400 - min: "scale 400"
      scale 1200 - min: "scale 1200"
      scale 3999 - min: "scale 3999"
      scale 16784 - min: "scale 16784"
    where_clausel:
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_initializing_time_hour:
    id: "benchmarking_initializing_time_hour"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "initializing_time_hour.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_initializing_time.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "scale 400"
      - "scale 1200"
      - "scale 3999"
      - "scale 16784"
    x-axis-title: "Varianten"
    y-axis-title: "Init-Zeit [std.]"
    title: "Initialisierungszeiten"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "scale 400 - sec"
      - "scale 400 - min"
      - "scale 1200 - sec"
      - "scale 1200 - min"
      - "scale 3999 - sec"
      - "scale 3999 - min"
      - "scale 16784 - sec"
      - "scale 16784 - min"
    drop_columns_after_operations: False
    column_operations:
      datas:
      operations:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      scale 400 - hour: "scale 400"
      scale 1200 - hour: "scale 1200"
      scale 3999 - hour: "scale 3999"
      scale 16784 - hour: "scale 16784"
    where_clausel:
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_patroni_tps_evaluation_mixed:
    id: "benchmarking_patroni_tps_evaluation_mixed"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "tps_patroni_replica_mixed.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_tps_patroni_replica.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "1. Iteration \u2300"
      - "1. Iteration min"
      - "1. Iteration max"
      - "2. Iteration \u2300"
      - "2. Iteration min"
      - "2. Iteration max"
    x-axis-title: "Varianten"
    y-axis-title: "Transaktionen pro Sekunde (tps)"
    title: "Transaktionen pro Sekunden - mixed"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "tps_type"
      - "tps_1_run_1_iteration"
      - "tps_1_run_2_iteration"
      - "tps_1_run_3_iteration"
      - "tps_1_run_4_iteration"
      - "tps_2_run_1_iteration"
      - "tps_2_run_2_iteration"
      - "tps_2_run_3_iteration"
      - "tps_2_run_4_iteration"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "tps_1_run_average"
        - "tps_1_run_min"
        - "tps_1_run_max"
        - "tps_2_run_average"
        - "tps_2_run_min"
        - "tps_2_run_max"
      operations:
        tps_1_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_1_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_1_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_2_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
        tps_2_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
        tps_2_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      tps_1_run_average: "1. Iteration \u2300"
      tps_1_run_min: "1. Iteration min"
      tps_1_run_max: "1. Iteration max"
      tps_2_run_average: "2. Iteration \u2300"
      tps_2_run_min: "2. Iteration min"
      tps_2_run_max: "2. Iteration max"
    where_clausel: "tps_type == 'mixed'"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_patroni_tps_evaluation_dql:
    id: "benchmarking_patroni_tps_evaluation_dql"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "tps_patroni_replica_dql.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_tps_patroni_replica.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "1. Iteration \u2300"
      - "1. Iteration min"
      - "1. Iteration max"
      - "2. Iteration \u2300"
      - "2. Iteration min"
      - "2. Iteration max"
    x-axis-title: "Varianten"
    y-axis-title: "Transaktionen pro Sekunde (tps)"
    title: "Transaktionen pro Sekunden - dql"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor:
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "tps_type"
      - "tps_1_run_1_iteration"
      - "tps_1_run_2_iteration"
      - "tps_1_run_3_iteration"
      - "tps_1_run_4_iteration"
      - "tps_2_run_1_iteration"
      - "tps_2_run_2_iteration"
      - "tps_2_run_3_iteration"
      - "tps_2_run_4_iteration"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "tps_1_run_average"
        - "tps_1_run_min"
        - "tps_1_run_max"
        - "tps_2_run_average"
        - "tps_2_run_min"
        - "tps_2_run_max"
      operations:
        tps_1_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_1_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_1_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_1_run_2_iteration"
            - "tps_1_run_3_iteration"
            - "tps_1_run_4_iteration"
        tps_2_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
        tps_2_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
        tps_2_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "tps_2_run_2_iteration"
            - "tps_2_run_3_iteration"
            - "tps_2_run_4_iteration"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      tps_1_run_average: "1. Iteration \u2300"
      tps_1_run_min: "1. Iteration min"
      tps_1_run_max: "1. Iteration max"
      tps_2_run_average: "2. Iteration \u2300"
      tps_2_run_min: "2. Iteration min"
      tps_2_run_max: "2. Iteration max"
    where_clausel: "tps_type == 'dql'"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_patroni_latency_evaluation_mixed:
    id: "benchmarking_patroni_latency_evaluation_mixed"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "latency_patroni_replica_mixed.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_latency_patroni_replica.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "1. Iteration \u2300"
      - "1. Iteration min"
      - "1. Iteration max"
      - "2. Iteration \u2300"
      - "2. Iteration min"
      - "2. Iteration max"
    x-axis-title: "Varianten"
    y-axis-title: "Latenzen (ms)"
    title: "Latenzen in milisekunden - mixed"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc: "center"
#      bbox_to_anchor: !!python/tuple [1,1]
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "latency_type"
      - "latency_1_run_1_iteration"
      - "latency_1_run_2_iteration"
      - "latency_1_run_3_iteration"
      - "latency_1_run_4_iteration"
      - "latency_2_run_1_iteration"
      - "latency_2_run_2_iteration"
      - "latency_2_run_3_iteration"
      - "latency_2_run_4_iteration"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "latency_1_run_average"
        - "latency_1_run_min"
        - "latency_1_run_max"
        - "latency_2_run_average"
        - "latency_2_run_min"
        - "latency_2_run_max"
      operations:
        latency_1_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_1_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_1_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_2_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
        latency_2_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
        latency_2_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      latency_1_run_average: "1. Iteration \u2300"
      latency_1_run_min: "1. Iteration min"
      latency_1_run_max: "1. Iteration max"
      latency_2_run_average: "2. Iteration \u2300"
      latency_2_run_min: "2. Iteration min"
      latency_2_run_max: "2. Iteration max"
    where_clausel: "latency_type == 'mixed'"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  benchmarking_patroni_latency_evaluation_dql:
    id: "benchmarking_patroni_latency_evaluation_dql"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "latency_patroni_replica_dql.png"
    datafile_path: "source/tables"
    datafile: "benchmarking_latency_patroni_replica.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "1. Iteration \u2300"
      - "1. Iteration min"
      - "1. Iteration max"
      - "2. Iteration \u2300"
      - "2. Iteration min"
      - "2. Iteration max"
    x-axis-title: "Varianten"
    y-axis-title: "Latenzen (ms)"
    title: "Latenzen in milisekunden - mixed"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      subplot:
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc: "center"
#      bbox_to_anchor: !!python/tuple [1,1]
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "latency_type"
      - "latency_1_run_1_iteration"
      - "latency_1_run_2_iteration"
      - "latency_1_run_3_iteration"
      - "latency_1_run_4_iteration"
      - "latency_2_run_1_iteration"
      - "latency_2_run_2_iteration"
      - "latency_2_run_3_iteration"
      - "latency_2_run_4_iteration"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "latency_1_run_average"
        - "latency_1_run_min"
        - "latency_1_run_max"
        - "latency_2_run_average"
        - "latency_2_run_min"
        - "latency_2_run_max"
      operations:
        latency_1_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_1_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_1_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_1_run_2_iteration"
            - "latency_1_run_3_iteration"
            - "latency_1_run_4_iteration"
        latency_2_run_average:
          operation_function: "mean"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
        latency_2_run_min:
          operation_function: "min"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
        latency_2_run_max:
          operation_function: "max"
          axis_number: 1
          columns:
            - "latency_2_run_2_iteration"
            - "latency_2_run_3_iteration"
            - "latency_2_run_4_iteration"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      variante: "Varianten"
      latency_1_run_average: "1. Iteration \u2300"
      latency_1_run_min: "1. Iteration min"
      latency_1_run_max: "1. Iteration max"
      latency_2_run_average: "2. Iteration \u2300"
      latency_2_run_min: "2. Iteration min"
      latency_2_run_max: "2. Iteration max"
    where_clausel: "latency_type == 'mixed'"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  time_investment_sum:
    id: "time_investment_sum"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "time_investment_summe.png"
    datafile_path: "source/pandas_data_chart_plotter"
    datafile: "time_investment.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "Gesamtaufwand / 5 Jahre"
    x-axis-title: "Varianten"
    y-axis-title: "Aufwand [h]"
    title: "Gemessene und Extrapolierte Aufwände Total"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      subplot:
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor: !!python/tuple [1,1]
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "Filter"
      - "Basisinstallation"
      - "Basiskonfiguration"
      - "Backup Konfiguration"
      - "Monitoring Konfiguration"
      - "Backup Konfiguration"
      - "PKI Integration"
      - "Automatisierung Backup"
      - "Automatisierung Skalierung"
      - "Self-Healing"
      - "Auto-Recovery"
      - "DB Self-Service"
      - "Switchover / 5 Jahre"
      - "Node Recovery / 5 Jahre"
      - "Backup Recovery / 5 Jahre"
      - "Quorum erweitern / 5 Jahre"
      - "Switchover / Pro Aktion"
      - "Node Recovery / Pro Aktion"
      - "Backup Recovery / Pro Aktion"
      - "Quorum erweitern / Pro Aktion"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "Gesamtaufwand"
      operations:
        Gesamtaufwand:
          operation_function: "sum"
          axis_number: 1
          columns:
            - "Basisinstallation"
            - "Basiskonfiguration"
            - "Backup Konfiguration"
            - "Monitoring Konfiguration"
            - "Backup Konfiguration"
            - "PKI Integration"
            - "Automatisierung Backup"
            - "Automatisierung Skalierung"
            - "Self-Healing"
            - "Auto-Recovery"
            - "DB Self-Service"
            - "Switchover / 5 Jahre"
            - "Node Recovery / 5 Jahre"
            - "Backup Recovery / 5 Jahre"
            - "Quorum erweitern / 5 Jahre"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      Gesamtaufwand: "Gesamtaufwand / 5 Jahre"
    where_clausel: "Filter == 1"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  cost_investment_sum:
    id: "cost_investment_sum"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "cost_investment_summe.png"
#    datafile_path: "source/tables"
    datafile_path: "source/pandas_data_chart_plotter"
#    datafile: "measurement_times.csv"
    datafile: "cost_investemnt.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "Gesamtkosten / 5 Jahre"
    x-axis-title: "Varianten"
    y-axis-title: "Kosten [CHF]"
    title: "Berechnete und Extrapolierte Aufwände Total"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      subplot:
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor: !!python/tuple [1,1]
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "Filter"
      - "Basisinstallation"
      - "Basiskonfiguration"
      - "Backup Konfiguration"
      - "Monitoring Konfiguration"
      - "Backup Konfiguration"
      - "PKI Integration"
      - "Automatisierung Backup"
      - "Automatisierung Skalierung"
      - "Self-Healing"
      - "Auto-Recovery"
      - "DB Self-Service"
      - "Switchover / 5 Jahre"
      - "Node Recovery / 5 Jahre"
      - "Backup Recovery / 5 Jahre"
      - "Quorum erweitern / 5 Jahre"
      - "Switchover / Pro Aktion"
      - "Node Recovery / Pro Aktion"
      - "Backup Recovery / Pro Aktion"
      - "Quorum erweitern / Pro Aktion"
    drop_columns_after_operations: True
    column_operations:
      datas:
        - "Gesamtaufwand"
      operations:
        Gesamtaufwand:
          operation_function: "sum"
          axis_number: 1
          columns:
            - "Basisinstallation"
            - "Basiskonfiguration"
            - "Backup Konfiguration"
            - "Monitoring Konfiguration"
            - "Backup Konfiguration"
            - "PKI Integration"
            - "Automatisierung Backup"
            - "Automatisierung Skalierung"
            - "Self-Healing"
            - "Auto-Recovery"
            - "DB Self-Service"
            - "Switchover / 5 Jahre"
            - "Node Recovery / 5 Jahre"
            - "Backup Recovery / 5 Jahre"
            - "Quorum erweitern / 5 Jahre"
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
      Gesamtaufwand: "Gesamtkosten / 5 Jahre"
    where_clausel: "Filter == 1"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  time_investment_action:
    id: "time_investment_action"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "time_investment_action.png"
    datafile_path: "source/pandas_data_chart_plotter"
    datafile: "time_investment.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "Switchover / Pro Aktion"
      - "Node Recovery / Pro Aktion"
      - "Backup Recovery / Pro Aktion"
      - "Quorum erweitern / Pro Aktion"
    x-axis-title: "Varianten"
    y-axis-title: "Aufwand [h]"
    title: "Gemessene und Extrapolierte Aufwände - Betriebstasks"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      subplot:
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor: !!python/tuple [1,1]
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "Filter"
      - "Basisinstallation"
      - "Basiskonfiguration"
      - "Backup Konfiguration"
      - "Monitoring Konfiguration"
      - "Backup Konfiguration"
      - "PKI Integration"
      - "Automatisierung Backup"
      - "Automatisierung Skalierung"
      - "Self-Healing"
      - "Auto-Recovery"
      - "DB Self-Service"
      - "Switchover / 5 Jahre"
      - "Node Recovery / 5 Jahre"
      - "Backup Recovery / 5 Jahre"
      - "Quorum erweitern / 5 Jahre"
    column_operations:
      datas:
      operations:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
    where_clausel: "Filter == 2"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  cost_investment_action:
    id: "cost_investment_action"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "cost_investment_action.png"
#    datafile_path: "source/tables"
    datafile_path: "source/pandas_data_chart_plotter"
#    datafile: "measurement_times.csv"
    datafile: "cost_investemnt.csv"
    separator: ";"
    decimal: "."
    x-axis-columns: "Varianten"
    y-axis-columns:
      - "Switchover / Pro Aktion"
      - "Node Recovery / Pro Aktion"
      - "Backup Recovery / Pro Aktion"
      - "Quorum erweitern / Pro Aktion"
    x-axis-title: "Varianten"
    y-axis-title: "Kosten [CHF]"
    title: "Berechnete und Extrapolierte Aufwände - Betriebstasks"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      subplot:
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor: !!python/tuple [1,1]
    group_by:
    group_by_function:
    agg_funtion:
    agg_colums:
    drop_columns:
      - "Filter"
      - "Basisinstallation"
      - "Basiskonfiguration"
      - "Backup Konfiguration"
      - "Monitoring Konfiguration"
      - "Backup Konfiguration"
      - "PKI Integration"
      - "Automatisierung Backup"
      - "Automatisierung Skalierung"
      - "Self-Healing"
      - "Auto-Recovery"
      - "DB Self-Service"
      - "Switchover / 5 Jahre"
      - "Node Recovery / 5 Jahre"
      - "Backup Recovery / 5 Jahre"
      - "Quorum erweitern / 5 Jahre"
    column_operations:
      datas:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
    where_clausel: "Filter == 2"
    sorting:
      order_by:
      sort_acending: True
      sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  projektcontrolling_balance:
    id: "projektcontrolling_balance"
    separator: ";"
    decimal: "."
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    datafile_path: "source/tables"
    datafile: "arbeitsrapport.CSV"
    imagename: "projektcontrolling_balance.png"
    decimal_format:
    x-axis-columns: "Subphase"
    y-axis-columns:
      - "Dauer [h]"
      - "Geplante Dauer [h]"
      - "Verbleibende Zeit [h]"
    x-axis-title:
    y-axis-title:
    title: "Projektcontrolling"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      subplot:
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor: !!python/tuple [1,1]
    group_by:
     - "Subphase"
    group_by_function: "sum"
    agg_funtion:
     - "Dauer [h]"
     - "Geplante Dauer [h]"
     - "dauer_summe"
    agg_colums:
    drop_columns:
     - "Nr."
     - "dauer_summe"
     - "Datum"
     - "Von"
     - "Bis"
     - "Hide"
     - "Phase"
     - "Tätigkeit"
     - "Bemerkung"
     - "Schwierigkeit"
     - "Lösungen"
    column_operations:
     datas:
      - "dauer_summe"
     operations:
      dauer_summe:
       operation_function: "diff"
       axis_number: 1
       columns:
       - "Dauer [h]"
       - "Geplante Dauer [h]"
    pivot:
     pivot_columns:
     pivot_values:
    pivot_table:
     pivot_index:
      pivot_indizes:
      pivot_indizes_visible: False
      pivot_rename_indizes:
     pivot_columns:
     pivot_values:
     pivot_agg_func:
     transpose: True
    rename_columns:
      dauer_summe: "Verbleibende Zeit [h]"
    where_clausel:
    sorting:
     order_by:
     sort_acending: False
     sort_inplace: True
    margins:
     margin: False
     margin_name: "Total"
     non_pivot_margin_column:
      - "Dauer [h]"
      - "Geplante Dauer [h]"
      - "dauer_summe"
     non_pivot_margin_function: "sum"
  projektcontrolling_balance_sum:
    id: "projektcontrolling_balance_sum"
    separator: ";"
    decimal: "."
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    datafile_path: "source/tables"
    datafile: "arbeitsrapport.CSV"
    imagename: "projektcontrolling_balance.png"
    decimal_format:
    x-axis-columns: "Subphase"
    y-axis-columns:
      - "Dauer [h]"
      - "Geplante Dauer [h]"
      - "Verbleibende Zeit [h]"
    x-axis-title:
    y-axis-title:
    title: "Projektcontrolling"
    chart-index:
    chart-kind: "bar"
    chart-designs:
      subplots: False
      subplot:
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: False
      secondary_y: False
      stylelist:
      figsize:
      autopct:
      loc:
      bbox_to_anchor: !!python/tuple [1,1]
    group_by:
     - "Subphase"
    group_by_function: "sum"
    agg_funtion:
     - "Dauer [h]"
     - "Geplante Dauer [h]"
     - "dauer_summe"
    agg_colums:
    drop_columns:
     - "Nr."
     - "dauer_summe"
     - "Datum"
     - "Von"
     - "Bis"
     - "Hide"
     - "Phase"
     - "Tätigkeit"
     - "Bemerkung"
     - "Schwierigkeit"
     - "Lösungen"
    column_operations:
     datas:
      - "dauer_summe"
     operations:
      dauer_summe:
       operation_function: "diff"
       axis_number: 1
       columns:
       - "Dauer [h]"
       - "Geplante Dauer [h]"
    pivot:
     pivot_columns:
     pivot_values:
    pivot_table:
     pivot_index:
      pivot_indizes:
      pivot_indizes_visible: False
      pivot_rename_indizes:
     pivot_columns:
     pivot_values:
     pivot_agg_func:
     transpose: True
    rename_columns:
      dauer_summe: "Verbleibende Zeit [h]"
    where_clausel:
    sorting:
     order_by:
     sort_acending: False
     sort_inplace: True
    margins:
     margin: True
     margin_name: "Total"
     non_pivot_margin_column:
      - "Dauer [h]"
      - "Geplante Dauer [h]"
      - "dauer_summe"
     non_pivot_margin_function: "sum"
  db_inventory_per_os_databases:
    id: "db_inventory_per_os_databases"
    separator: ","
    decimal: "."
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    datafile_path: "source/tables"
    datafile: "inventory.csv"
    imagename: "db_inventory_per_os_databases.png"
    decimal_format:
    x-axis-columns: "RDBMS"
    y-axis-columns:
    x-axis-title:
    y-axis-title:
    title: "Datenbankinventor - Pro OS"
    chart-index:
    chart-kind: "pie"
    chart-designs:
      subplots: True
      subplot: !!python/tuple [1,3]
      grid: False
      legend: False
      rot:
      fontsize:
      stacked: True
      secondary_y: False
      stylelist:
      figsize: !!python/tuple [8,8]
      autopct: '%1.0f%%'
      loc: "upper center"
      bbox_to_anchor: !!python/tuple [0,0]
    group_by:
     - "rdbms"
     - "os"
    group_by_function: "sum"
    agg_funtion:
    agg_colums:
     - "os"
    drop_columns:
     - "server"
     - "version"
     - "releasedate"
     - "eol"
     - "age"
     - "eol_since"
     - "comment"
     - "instance"
  #   - "appliance"
    column_operations:
     datas:
     operations:
      dauer_summe:
       operation_function:
       axis_number:
       columns:
    pivot:
     pivot_columns:
     pivot_values:
    pivot_table:
     pivot_index:
      pivot_indizes:
       - "os"
       - "rdbms"
      pivot_indizes_visible: True
      pivot_rename_indizes:
       os: "OS"
       rdbms: "RDBMS"
     pivot_columns:
     pivot_values:
     pivot_agg_func:
#      instance: "sum"
      databases: "sum"
#      appliance: "sum"
     transpose: True
    rename_columns:
     rdbms: "RDBMS"
#     instance : "Instanz"
     databases : "Datenbanken"
     os : "OS"
#     appliance: "Appliance"
    where_clausel:
    sorting:
     order_by:
     sort_acending: False
     sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  db_inventory_per_os_instances:
    id: "db_inventory_per_os_instances"
    separator: ","
    decimal: "."
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    datafile_path: "source/tables"
    datafile: "inventory.csv"
    imagename: "db_inventory_per_os_instances.png"
    decimal_format:
    x-axis-columns: "RDBMS"
    y-axis-columns:
    x-axis-title:
    y-axis-title:
    title: "Datenbankinventor - Pro OS"
    chart-index:
    chart-kind: "pie"
    chart-designs:
      subplots: True
      subplot: !!python/tuple [1,3]
      grid: False
      legend: False
      rot:
      fontsize:
      stacked: True
      secondary_y: False
      stylelist:
      figsize: !!python/tuple [8,8]
      autopct: '%1.0f%%'
      loc: "upper center"
      bbox_to_anchor: !!python/tuple [0,0]
    group_by:
     - "rdbms"
     - "os"
    group_by_function: "sum"
    agg_funtion:
    agg_colums:
     - "os"
    drop_columns:
     - "server"
     - "version"
     - "releasedate"
     - "eol"
     - "age"
     - "eol_since"
     - "comment"
     - "databases"
#     - "instance"
  #   - "appliance"
    column_operations:
     datas:
     operations:
      dauer_summe:
       operation_function:
       axis_number:
       columns:
    pivot:
     pivot_columns:
     pivot_values:
    pivot_table:
     pivot_index:
      pivot_indizes:
       - "os"
       - "rdbms"
      pivot_indizes_visible: True
      pivot_rename_indizes:
       os: "OS"
       rdbms: "RDBMS"
     pivot_columns:
     pivot_values:
     pivot_agg_func:
      instance: "sum"
#      databases: "sum"
#      appliance: "sum"
     transpose: True
    rename_columns:
     rdbms: "RDBMS"
     instance : "Instanz"
#     databases : "Datenbanken"
     os : "OS"
#     appliance: "Appliance"
    where_clausel:
    sorting:
     order_by:
     sort_acending: False
     sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  db_inventory_per_os_appliance:
    id: "db_inventory_per_os_appliance"
    separator: ","
    decimal: "."
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    datafile_path: "source/tables"
    datafile: "inventory.csv"
    imagename: "db_inventory_per_os_appliance.png"
    decimal_format:
    x-axis-columns: "RDBMS"
    y-axis-columns:
    x-axis-title:
    y-axis-title:
    title: "Datenbankinventor - Pro OS"
    chart-index:
    chart-kind: "pie"
    chart-designs:
      subplots: True
      subplot: !!python/tuple [1,3]
      grid: False
      legend: False
      rot:
      fontsize:
      stacked: True
      secondary_y: False
      stylelist:
      figsize: !!python/tuple [8,8]
      autopct: '%1.0f%%'
      loc: "upper center"
      bbox_to_anchor: !!python/tuple [0,0]
    group_by:
     - "rdbms"
     - "os"
    group_by_function: "sum"
    agg_funtion:
    agg_colums:
     - "os"
    drop_columns:
     - "server"
     - "version"
     - "releasedate"
     - "eol"
     - "age"
     - "eol_since"
     - "comment"
     - "databases"
     - "instance"
#     - "appliance"
    column_operations:
     datas:
     operations:
      dauer_summe:
       operation_function:
       axis_number:
       columns:
    pivot:
     pivot_columns:
     pivot_values:
    pivot_table:
     pivot_index:
      pivot_indizes:
       - "os"
       - "rdbms"
      pivot_indizes_visible: True
      pivot_rename_indizes:
       os: "OS"
       rdbms: "RDBMS"
     pivot_columns:
     pivot_values:
     pivot_agg_func:
#      instance: "sum"
#      databases: "sum"
      appliance: "sum"
     transpose: True
    rename_columns:
     rdbms: "RDBMS"
#     instance : "Instanz"
#     databases : "Datenbanken"
     os : "OS"
     appliance: "Appliance"
    where_clausel:
    sorting:
     order_by:
     sort_acending: False
     sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  db_inventory_per_rdbms_instance:
    id: "db_inventory_per_rdbms_instance"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "db_inventory_per_rdbms_instance.png"
    datafile_path: "source/tables"
    datafile: "inventory.csv"
    separator: ","
    decimal: "."
    x-axis-columns: "RDBMS"
    y-axis-columns:
    x-axis-title:
    y-axis-title:
    title: "Datenbankinventor - Pro RDBMS"
    chart-index: "RDBMS"
    chart-kind: "pie"
    chart-designs:
      subplots: True
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: True
      subplot: !!python/tuple [1,2]
      secondary_y: False
      stylelist:
      figsize: !!python/tuple [10,8]
      autopct: '%1.0f%%'
      loc: "best"
      bbox_to_anchor:
    group_by:
      - "rdbms"
    group_by_function: "sum"
    agg_funtion:
    agg_colums:
      - "rdbms"
    drop_columns:
     - "server"
     - "os"
     - "version"
     - "releasedate"
     - "eol"
     - "age"
     - "eol_since"
     - "comment"
     - "appliance"
     - "databases"
    column_operations:
      datas:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
     rdbms: "RDBMS"
     instance : "Instanz"
     databases : "Datenbanken"
     appliance: "Appliance"
    where_clausel:
    sorting:
      order_by:
        - "rdbms"
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  db_inventory_per_rdbms_database:
    id: "db_inventory_per_rdbms_database"
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    imagename: "db_inventory_per_rdbms_database.png"
    datafile_path: "source/tables"
    datafile: "inventory.csv"
    separator: ","
    decimal: "."
    x-axis-columns: "RDBMS"
    y-axis-columns:
    x-axis-title:
    y-axis-title:
    title: "Datenbankinventor - Pro RDBMS"
    chart-index: "RDBMS"
    chart-kind: "pie"
    chart-designs:
      subplots: True
      grid: True
      legend: True
      rot:
      fontsize:
      stacked: True
      subplot: !!python/tuple [1,2]
      secondary_y: False
      stylelist:
      figsize: !!python/tuple [10,8]
      autopct: '%1.0f%%'
      loc: "best"
      bbox_to_anchor:
    group_by:
      - "rdbms"
    group_by_function: "sum"
    agg_funtion:
    agg_colums:
      - "rdbms"
    drop_columns:
     - "server"
     - "os"
     - "version"
     - "releasedate"
     - "eol"
     - "age"
     - "eol_since"
     - "comment"
     - "appliance"
     - "instance"
    column_operations:
      datas:
    pivot:
      pivot_columns:
      pivot_values:
    pivot_table:
      pivot_index:
       pivot_indizes_visible: False
       pivot_rename_indizes:
      pivot_columns:
      pivot_values:
      pivot_agg_func:
    rename_columns:
     rdbms: "RDBMS"
     instance : "Instanz"
     databases : "Datenbanken"
     appliance: "Appliance"
    where_clausel:
    sorting:
      order_by:
        - "rdbms"
      sort_acending: True
      sort_inplace: True
    margins:
      margin: False
      margin_name:
      margin_column:
      non_pivot_margin_column:
      non_pivot_margin_function:
  projektcontrolling_dauer:
    id: "projektcontrolling_dauer"
    separator: ";"
    decimal: "."
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    datafile_path: "source/tables"
    datafile: "arbeitsrapport.CSV"
    imagename: "projektcontrolling_dauer.png"
    decimal_format:
    x-axis-columns: "Subphase"
    y-axis-columns:
    x-axis-title:
    y-axis-title:
    title: "Projektcontrolling - Dauer [h]"
    chart-index: "Subphase"
    chart-kind: "pie"
    chart-designs:
      subplots: True
      grid: False
      legend: False
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize: !!python/tuple [8,8]
      autopct: '%1.0f%%'
      loc: "upper center"
      bbox_to_anchor: !!python/tuple [0,0]
    group_by:
     - "Subphase"
    group_by_function: "sum"
    agg_funtion:
     - "Dauer [h]"
#     - "Geplante Dauer [h]"
    agg_colums:
    drop_columns:
     - "Nr."
     - "dauer_summe"
     - "Datum"
     - "Von"
     - "Bis"
     - "Hide"
     - "Phase"
     - "Tätigkeit"
     - "Bemerkung"
     - "Schwierigkeit"
     - "Lösungen"
     - "Geplante Dauer [h]"
    column_operations:
     datas:
     operations:
      dauer_summe:
       operation_function:
       axis_number: 1
       columns:
    pivot:
     pivot_columns:
     pivot_values:
    pivot_table:
     pivot_index:
      pivot_indizes:
      pivot_indizes_visible: False
      pivot_rename_indizes:
     pivot_columns:
     pivot_values:
     pivot_agg_func:
     transpose: True
    rename_columns:
    where_clausel:
    sorting:
     order_by:
     sort_acending: False
     sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:
  projektcontrolling_geplant:
    id: "projektcontrolling_geplant"
    separator: ";"
    decimal: "."
    startpath: "parentdir"
    destination_path: "source/pandas_data_chart_plotter"
    datafile_path: "source/tables"
    datafile: "arbeitsrapport.CSV"
    imagename: "projektcontrolling_geplant.png"
    decimal_format:
    x-axis-columns: "Subphase"
    y-axis-columns:
    x-axis-title:
    y-axis-title:
    title: "Projektcontrolling - Geplante Dauer [h]"
    chart-index: "Subphase"
    chart-kind: "pie"
    chart-designs:
      subplots: True
      grid: False
      legend: False
      rot:
      fontsize:
      stacked: False
      subplot:
      secondary_y: False
      stylelist:
      figsize: !!python/tuple [8,8]
      autopct: '%1.0f%%'
      loc: "upper center"
      bbox_to_anchor: !!python/tuple [0,0]
    group_by:
     - "Subphase"
    group_by_function: "sum"
    agg_funtion:
#     - "Dauer [h]"
     - "Geplante Dauer [h]"
    agg_colums:
    drop_columns:
     - "Nr."
     - "dauer_summe"
     - "Datum"
     - "Von"
     - "Bis"
     - "Hide"
     - "Phase"
     - "Tätigkeit"
     - "Bemerkung"
     - "Schwierigkeit"
     - "Lösungen"
     - "Dauer [h]"
    column_operations:
     datas:
     operations:
      dauer_summe:
       operation_function:
       axis_number: 1
       columns:
    pivot:
     pivot_columns:
     pivot_values:
    pivot_table:
     pivot_index:
      pivot_indizes:
      pivot_indizes_visible: False
      pivot_rename_indizes:
     pivot_columns:
     pivot_values:
     pivot_agg_func:
     transpose: True
    rename_columns:
    where_clausel:
    sorting:
     order_by:
     sort_acending: False
     sort_inplace: True
    margins:
     margin: False
     margin_name:
     margin_column:
     non_pivot_margin_column:
     non_pivot_margin_function:

